server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none';" always;

    # Rate limiting
    limit_req zone=api burst=20 nodelay;
    limit_conn conn 10;

    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://image_translate_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Metrics endpoint (no rate limiting)
    location /metrics {
        access_log off;
        proxy_pass http://image_translate_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeout for metrics
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # API documentation (light rate limiting)
    location ~ ^/(docs|redoc|openapi.json) {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://image_translate_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
    }

    # Translation endpoint (strict rate limiting)
    location /api/v1/translate {
        limit_req zone=upload burst=5 nodelay;
        
        proxy_pass http://image_translate_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for file processing
        proxy_connect_timeout 10s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffer settings for large file uploads
        proxy_request_buffering on;
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # All other API endpoints
    location /api/ {
        limit_req zone=api burst=15 nodelay;
        
        proxy_pass http://image_translate_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Default location (catch all)
    location / {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://image_translate_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Error pages
    error_page 429 /429.html;
    location = /429.html {
        internal;
        return 429 '{"detail":"Rate limit exceeded. Please try again later.","error_code":"RATE_LIMIT_EXCEEDED"}';
        add_header Content-Type application/json always;
    }

    error_page 502 503 504 /50x.html;
    location = /50x.html {
        internal;
        return 503 '{"detail":"Service temporarily unavailable","error_code":"SERVICE_UNAVAILABLE"}';
        add_header Content-Type application/json always;
    }
}

# HTTPS configuration (uncomment and configure for production)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#
#     # SSL configuration
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_session_cache shared:SSL:1m;
#     ssl_session_timeout 10m;
#     ssl_ciphers PROFILE=SYSTEM;
#     ssl_prefer_server_ciphers on;
#
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#
#     # Security headers (same as HTTP)
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none';" always;
#
#     # Same location blocks as HTTP version...
#     # (copy all location blocks from HTTP server)
# }

# Redirect HTTP to HTTPS (uncomment for production with SSL)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }