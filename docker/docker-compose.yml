
services:
  # Redis service
  redis:
    image: redis:8-alpine
    container_name: image_translate_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - translate_network

  # Main application (development)
  app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: image_translate_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    environment:
      - REDIS_HOST=redis  # Override for Docker network
    volumes:
      - ../app:/app/app:ro
      - ../config:/app/config:ro
      - app_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - translate_network

  # Production application (uncomment when needed)
  # app_prod:
  #   build:
  #     context: ../
  #     dockerfile: docker/Dockerfile.prod
  #   container_name: image_translate_app_prod
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - LOG_LEVEL=INFO
  #   volumes:
  #     - ../config:/app/config:ro
  #     - app_logs:/app/logs
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s
  #   networks:
  #     - translate_network

  # Nginx reverse proxy (for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: image_translate_nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ../nginx/sites-available/image-translation-backend:/etc/nginx/sites-available/default:ro
  #     - ../nginx/ssl:/etc/nginx/ssl:ro
  #     - nginx_logs:/var/log/nginx
  #   depends_on:
  #     - app_prod
  #   networks:
  #     - translate_network

volumes:
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  translate_network:
    driver: bridge